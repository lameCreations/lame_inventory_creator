[Create Summary Network Traffic]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
description = saved search that uses the Network Traffic datamodel to create a summary of network traffic.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_inventory_creator
request.ui_dispatch_view = search
search = | tstats values(sourcetype) as sourcetype from datamodel=Network_Traffic groupby All_Traffic.src_ip, All_Traffic.dest_ip | head 5\
``` Below query drops the All_Traffic. off of each of the fields```\
| `drop_dm_object_name(All_Traffic)`\
| eval _time = now() - random()% 24 * 60 * 60\
| table *\
| collect index=summary source=summary_network_traffic

[isHTTP_Lookup_Creator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
description = Creates the list of HTTP Servers on your environment
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_inventory_creator
request.ui_dispatch_view = search
search = | tstats count from datamodel=Web where Web.dest!="unknown" groupby Web.dest\
| `drop_dm_object_name(Web)`\
| rename dest as ip\
| eval isHTTP = 1\
| table ip, isHTTP\
| outputlookup isHTTPServer.csv

[isKerberos_Lookup_Creator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
description = Collects the machines that are the destination of a Kerberos traffic session
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_inventory_creator
request.ui_dispatch_view = search
search = | tstats count from datamodel=Network_Sessions where sourcetype=lame_kerberos groupby dest\
| `drop_dm_object_name(Network_Sessions)`\
| eval isKerberos = 1\
| rename dest as ip\
| table ip, isKerberos\
| outputlookup isKerberosServer.csv

[isRDP_Lookup_Creator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
description = Collects the RDP servers that are responding to a network session
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_inventory_creator
request.ui_dispatch_view = search
search = | tstats count from datamodel=Network_Sessions where sourcetype=lame_rdp groupby dest\
| `drop_dm_object_name(Network_Sessions)`\
| eval isKerberos = 1\
| rename dest as ip\
| table ip, isRDP\
| outputlookup isRDPServer.csv

[isDNS_Lookup_Creator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
description = collects logs to determine what systems are DNS servers
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_inventory_creator
request.ui_dispatch_view = search
search = | tstats count from datamodel=Network_Traffic Where All_Traffic.dest_port=53 groupby All_Traffic.dest_ip\
| `drop_dm_object_name(All_Traffic)`\
| eval isDNS = 1\
| rename dest_ip as ip\
| table ip, isDNS\
| outputlookup isDNSServer.csv

[inventory_lookup_creator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = lame_inventory_creator
request.ui_dispatch_view = search
search = index=summary source="summary_network_traffic"\
| fields src_ip, dest_ip\
``` Below query will create a multivalue field called ip which is the combination of the src and dest ip  ```\
| eval ip=mvappend(src_ip, dest_ip)\
| fields - src_ip, dest_ip\
| stats count by ip\
| fields - count\
| search [ inputlookup network_subnet_breakdown | search description="non-routable" OR description="whois" | fields ip ]\
| lookup isHTTPServer.csv ip as ip output isHTTP\
| lookup isDNSServer.csv ip as ip output isDNS\
| lookup isKerberosServer.csv ip as ip output isKerberos\
| lookup isRDPServer.csv ip as ip output isRDP\
| fillnull value=0\
| table *\
\
| eval isHTTP = case(isHTTP>0, "yes", 1=1, "no")\
| eval isSMTP = case(isSMTP>0, "yes", 1=1, "no")\
| eval isDNS = case(isDNS>0, "yes", 1=1, "no")\
| eval isKerberos = case(isKerberos>0, "yes", 1=1, "no")\
| eval isRDP = case(isRDP>0, "yes", 1=1, "no")\
| eval _time = now() - random()% 24 * 60 * 60\
| table *\
| outputlookup network_inventory.csv\
| collect index=summary source=inventory\
```\
| lookup dhcp_lookup output mac, host_name\
| lookup ntlm\
| lookup dce_rpc\
| lookup rdp_lookup\
| lookup rdp_admin_lookup\
| lookup fileshare_lookup\
| lookup isSSH\
| lookup isSMTP\
| lookup isPrinter\
| lookup IsDNS\
| lookup IsHTTP\
| lookup ip_user_agent\
| stats values(isFileShare) as isFileShare, values(user_agent_os) as user_agent_os, sum(IsRDPAdmin)\
| lookup OT Lookup\
| lookup hostname\
| lookup domaincontrollers\
| eval isFileShare(case(isFileShare>0 "Yes", 1=1", "No")\
```

[Create ES Data for Alert Test]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = lame_inventory_creator
request.ui_dispatch_view = search
search = | makeresults | eval src="10.0.0.1" \
| eval dest="8.8.8.9"\
| table _time, src, dest\
| collect index=summary source="es_alert_test"
